[{"/home/lucas/TI/TODO_Zygo/src/index.js":"1","/home/lucas/TI/TODO_Zygo/src/App.js":"2","/home/lucas/TI/TODO_Zygo/src/store/storeConfig.js":"3","/home/lucas/TI/TODO_Zygo/src/routes.js":"4","/home/lucas/TI/TODO_Zygo/src/components/templates/Footer.js":"5","/home/lucas/TI/TODO_Zygo/src/components/templates/Navbar.js":"6","/home/lucas/TI/TODO_Zygo/src/store/reducers/whichTableIsVisible.js":"7","/home/lucas/TI/TODO_Zygo/src/store/reducers/loading.js":"8","/home/lucas/TI/TODO_Zygo/src/store/reducers/tasks.js":"9","/home/lucas/TI/TODO_Zygo/src/components/Sobre.js":"10","/home/lucas/TI/TODO_Zygo/src/components/Home.js":"11","/home/lucas/TI/TODO_Zygo/src/components/templates/404.js":"12","/home/lucas/TI/TODO_Zygo/src/components/templates/Table.js":"13","/home/lucas/TI/TODO_Zygo/src/components/templates/Form.js":"14","/home/lucas/TI/TODO_Zygo/src/store/actions/tasks.js":"15","/home/lucas/TI/TODO_Zygo/src/store/actions/whichTableIsVisible.js":"16","/home/lucas/TI/TODO_Zygo/src/store/actions/loading.js":"17"},{"size":457,"mtime":1611782129903,"results":"18","hashOfConfig":"19"},{"size":404,"mtime":1611608079129,"results":"20","hashOfConfig":"19"},{"size":361,"mtime":1611774198172,"results":"21","hashOfConfig":"19"},{"size":415,"mtime":1611453805568,"results":"22","hashOfConfig":"19"},{"size":714,"mtime":1611870643048,"results":"23","hashOfConfig":"19"},{"size":644,"mtime":1611870417762,"results":"24","hashOfConfig":"19"},{"size":307,"mtime":1611454130619,"results":"25","hashOfConfig":"19"},{"size":288,"mtime":1611774225981,"results":"26","hashOfConfig":"19"},{"size":278,"mtime":1611773460171,"results":"27","hashOfConfig":"19"},{"size":497,"mtime":1611281721772,"results":"28","hashOfConfig":"19"},{"size":6677,"mtime":1611869454613,"results":"29","hashOfConfig":"19"},{"size":414,"mtime":1611772987417,"results":"30","hashOfConfig":"19"},{"size":3138,"mtime":1611869775256,"results":"31","hashOfConfig":"19"},{"size":2401,"mtime":1611782070177,"results":"32","hashOfConfig":"19"},{"size":134,"mtime":1611278275020,"results":"33","hashOfConfig":"19"},{"size":131,"mtime":1611454168617,"results":"34","hashOfConfig":"19"},{"size":137,"mtime":1611774203416,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1gejbwu",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/home/lucas/TI/TODO_Zygo/src/index.js",[],["80","81"],"/home/lucas/TI/TODO_Zygo/src/App.js",[],"/home/lucas/TI/TODO_Zygo/src/store/storeConfig.js",[],"/home/lucas/TI/TODO_Zygo/src/routes.js",["82"],"import React from \"react\";\nimport {Switch, Route} from 'react-router-dom';\n\nimport Home from './components/Home';\nimport Sobre from './components/Sobre';\nimport Error404 from './components/templates/404';\n\nexport default props => (\n    <Switch>\n        <Route path=\"/\" exact={true} component={Home} />\n        <Route path=\"/sobre\" component={Sobre} />\n        <Route path='*' component={Error404} />\n    </Switch>\n)","/home/lucas/TI/TODO_Zygo/src/components/templates/Footer.js",["83"],"/home/lucas/TI/TODO_Zygo/src/components/templates/Navbar.js",["84"],"/home/lucas/TI/TODO_Zygo/src/store/reducers/whichTableIsVisible.js",["85"],"const initialState = {\n    whichTableIsVisible: 1\n}\n\nexport default (state = initialState, action)=>{\n    switch (action.type) {\n        case 'VISION_CHANGED':\n            return {\n                ...state, whichTableIsVisible: action.payload\n            }\n        default:\n            return state;\n    }\n}","/home/lucas/TI/TODO_Zygo/src/store/reducers/loading.js",["86"],"const INITIAL_STATE = {\n    loading: false\n}\n\nexport default (state=INITIAL_STATE, action)=> {\n    switch (action.type) {\n        case 'UPDATE_LOADING':\n            return {\n                ...state, loading: action.payload\n            }\n        default:\n            return state;\n    }\n}","/home/lucas/TI/TODO_Zygo/src/store/reducers/tasks.js",["87"],"const INITIAL_STATE = {\n    tasks: []\n}\n\nexport default (state=INITIAL_STATE, action)=> {\n    switch (action.type) {\n        case 'UPDATE_TASK':\n            return {\n                ...state, tasks: action.payload\n            }\n        default:\n            return state;\n    }\n}","/home/lucas/TI/TODO_Zygo/src/components/Sobre.js",["88"],"import {Card} from 'react-bootstrap/';\n\nimport {Link} from 'react-router-dom';\n\nexport default props => (\n    <>\n        <Card>\n        <Card.Body>\n            <Card.Title id='Sobre'>Sobre</Card.Title>\n            <Card.Text>\n                Sistema desenvolvido para o processo seletive da empresa <a href='https://zygotecnologia.com/' target='blank'>Zygo</a> :)\n            </Card.Text>\n            <Card.Link><Link to='/'>Voltar</Link></Card.Link>\n        </Card.Body>\n        </Card>\n    </>\n)","/home/lucas/TI/TODO_Zygo/src/components/Home.js",["89","90"],"import React, {Component} from 'react';\nimport Table from './templates/Table';\nimport Form from './templates/Form';\n\nimport {Card, Nav, Spinner} from 'react-bootstrap';\nimport {Check, CardText, ListTask, Exclamation} from 'react-bootstrap-icons';\n\nimport {connect} from 'react-redux';\nimport {changeVision} from '../store/actions/whichTableIsVisible';\nimport {updateTasks} from '../store/actions/tasks';\nimport {updateLoading} from '../store/actions/loading';\n\nimport axios from 'axios';\n\nconst URL = 'https://todo-backend-express.herokuapp.com/';\n\nconst mapStateToProps = state =>{\n    return {\n        whichTableIsVisible: state.whichTableIsVisible.whichTableIsVisible,\n        tasks: state.tasks.tasks,\n        loading: state.loading.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch =>{\n    return {\n        changeVision(trueOrFalse) {\n            dispatch(changeVision(trueOrFalse));\n        },\n        updateTasks(userList){\n            dispatch(updateTasks(userList));\n        },\n        updateLoading(trueOrFalse){\n            dispatch(updateLoading(trueOrFalse));\n        }\n    }\n}\n\nclass Home extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    async componentWillMount(){\n        this.props.updateLoading(true);\n        try {\n            await this.updateTasks();\n        } finally {\n            this.props.updateLoading(false);\n        }\n    }\n\n    async componentDidUpdate(prevState){\n        if (prevState.loading !== this.props.loading) return;\n        this.updateTasks(); \n    }\n\n    async updateTasks(){\n        const tasks = await axios.get(URL);\n        this.sortTasksByOrder(tasks.data);\n        if (JSON.stringify(tasks.data) == JSON.stringify(this.props.tasks)) {\n            return;  \n        } \n        this.props.updateTasks(tasks.data);\n    }\n\n    sortTasksByOrder(taskList){\n        taskList.sort((firstTask, secondTask)=>{\n            return firstTask.order < secondTask.order ? -1 : firstTask.order > secondTask.order ? 1 : 0; \n        });\n    }\n\n    async completeTask(url, completed){\n        await axios.patch(url,\n        {\n            completed\n        });\n        await this.updateTasks();\n    }\n\n    async deleteCompletedTasks(){\n        this.props.updateLoading(true);\n        const completedTasks = this.props.tasks.filter(task=>task.completed);\n        try {\n            for(const completedTask of completedTasks){\n                await axios.delete(completedTask.url)\n            }\n            if (completedTasks.length === 0){\n                alert('NÃ£o existem tarefas completas no momento');\n                return;\n            }\n            await this.updateTasks();\n        } finally {\n            this.props.updateLoading(false);\n        }\n    }\n\n    async editTask(url, title){\n        this.props.updateLoading(true);\n        try {\n            await axios.patch(url,\n            {\n                title\n            });\n            await this.updateTasks();\n        } finally {\n            this.props.updateLoading(false);\n        }\n    }\n\n    async deleteTask(url){\n        const confirmation = window.confirm('Tem certeza que deseja excluir?');\n        if (confirmation){\n            this.props.updateLoading(true);\n            try {\n                await axios.delete(url);\n                await this.updateTasks();\n            } finally {\n                this.props.updateLoading(false);\n            }\n        }\n    }\n\n    filterTasksCompleteds(){\n        return this.props.tasks.filter(task=>task.completed);\n    }\n\n    filterTasksNotCompleteds(){\n        return this.props.tasks.filter(task=>!task.completed);\n    }\n\n    render(){\n        return(\n            <>\n            {\n                this.props.loading ? <Spinner animation=\"border\" className='spinner' variant=\"info\"/>\n                : null    \n            }\n            <Card>\n                <Card.Header>\n                    <Nav variant=\"tabs\" defaultActiveKey=\"#first\">\n                    <Nav.Item>\n                        <Nav.Link active={this.props.whichTableIsVisible === 1 ? true : false} onClick={() => this.props.changeVision(1)}><ListTask/></Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                        <Nav.Link active={this.props.whichTableIsVisible === 2 ? true : false} onClick={() => this.props.changeVision(2)}><Exclamation/></Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                        <Nav.Link active={this.props.whichTableIsVisible === 3 ? true : false} onClick={() => this.props.changeVision(3)}><Check/></Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                        <Nav.Link active={this.props.whichTableIsVisible === 4 ? true : false} onClick={() => this.props.changeVision(4)}><CardText/></Nav.Link>\n                    </Nav.Item>\n                    </Nav>\n                </Card.Header>\n                <Card.Body>\n                    {this.props.whichTableIsVisible === 1 ? \n                    <Table\n                        title='Tarefas'\n                        deleteTask={url=>this.deleteTask(url)} \n                        completeTask={(url, completed)=>this.completeTask(url, completed)} \n                        editTask={(url, title)=>this.editTask(url, title)}\n                        tasks={this.props.tasks} \n                        completed='trueAndFalse'\n                        deleteCompletedTasks={()=>this.deleteCompletedTasks()}/> \n                    : this.props.whichTableIsVisible === 2 ? \n                    <Table\n                        title='A fazer'\n                        deleteTask={url=>this.deleteTask(url)} \n                        completeTask={(url, completed)=>this.completeTask(url, completed)}\n                        editTask={(url, title)=>this.editTask(url, title)}\n                        tasks={this.filterTasksNotCompleteds()}\n                        deleteCompletedTasks={()=>this.deleteCompletedTasks()}/> \n                        : this.props.whichTableIsVisible === 3 ? \n                    <Table \n                        title='ConluÃ­das'\n                        deleteTask={url=>this.deleteTask(url)} \n                        completeTask={(url, completed)=>this.completeTask(url, completed)}\n                        editTask={(url, title)=>this.editTask(url, title)}\n                        tasks={this.filterTasksCompleteds()} \n                        completed={true}\n                        deleteCompletedTasks={()=>this.deleteCompletedTasks()}/> \n                    : <Form/>}\n                </Card.Body>\n            </Card>\n            </>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","/home/lucas/TI/TODO_Zygo/src/components/templates/404.js",["91"],"import {Link} from 'react-router-dom'\nimport {Card} from 'react-bootstrap';\n\nexport default props => (\n    <>\n        <Card>\n        <Card.Body>\n            <Card.Title id='Sobre'>Erro 404</Card.Title>\n            <Card.Text>\n                Desculpe mas essa pÃ¡gina nÃ£o existe.\n            </Card.Text>\n            <Card.Link><Link to='/'>Voltar</Link></Card.Link>\n        </Card.Body>\n        </Card>\n    </>\n)","/home/lucas/TI/TODO_Zygo/src/components/templates/Table.js",["92"],"import React, {useState} from 'react';\n\nimport {Table, Button, Card, InputGroup, FormControl} from 'react-bootstrap';\nimport { Check, TrashFill, Exclamation } from 'react-bootstrap-icons';\n\nexport default props => {\n\n    const [title, setTitle] = useState({value: '', url: ''});\n\n    return (\n        <>\n            <h3>{props.title}</h3>\n            {props.completed ?\n                <Button variant=\"primary\" className='buttonDeleteAll' size=\"sm\" onClick={()=>props.deleteCompletedTasks()}>\n                    Limpar tarefas concluÃ­das\n                </Button>\n            : null\n            }\n            <Table striped hover responsive borderless>\n                {props.tasks.length > 0 ? \n                    <>\n                        <thead>\n                            <tr>\n                                <th>Status</th>\n                                <th>Tarefa</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {props.tasks.map(task=>(\n                                <tr key={task.url}>\n                                    <td>{task.completed ? <Button onClick={()=>props.completeTask(task.url, false)} variant='success' title='ConcluÃ­do'><Check size='20'/></Button> : <Button onClick={()=>props.completeTask(task.url, true)} variant='warning' title='A fazer'><Exclamation size='20'/></Button>}</td>\n                                    {task.completed === false? \n                                    <InputGroup className='inputGroup'>\n                                        <FormControl\n                                            placeholder={task.title}\n                                            onChange={e => setTitle({value: e.target.value, url: task.url})}\n                                        />\n                                        <InputGroup.Append>\n                                        <Button variant=\"primary\" disabled={title.url === task.url && title.value.length > 0 ? false : true} onClick={()=>props.editTask(task.url, title.value)}>Editar</Button>\n                                        </InputGroup.Append>\n                                    </InputGroup>\n                                        : <td className='lineThrough'><span>{task.title}</span></td>}\n                                    {!task.completed ? <td><Button variant=\"danger\" onClick={()=>props.deleteTask(task.url)}><TrashFill/></Button></td> : <td><Button variant=\"secondary\" disabled><TrashFill/></Button></td>}\n                                </tr>\n                            ))}\n                        </tbody>\n                    </>\n                : \n                    <Card>\n                    <Card.Body>\n                        <Card.Title id='Sobre'>Lista vazia</Card.Title>\n                        <Card.Text>\n                            Ops! NÃ£o existem tarefas {props.completed === true ? 'concluÃ­das' : !props.completed ? 'em andamento' : ''} cadastradas :(\n                        </Card.Text>\n                    </Card.Body>\n                    </Card>\n                }\n            </Table>\n        </>\n    )\n}","/home/lucas/TI/TODO_Zygo/src/components/templates/Form.js",["93"],"import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport axios from 'axios';\n\nimport {Form, Button} from 'react-bootstrap';\nimport {changeVision} from '../../store/actions/whichTableIsVisible';\nimport {updateTasks} from '../../store/actions/tasks';\nimport {updateLoading} from '../../store/actions/loading';\n\nconst URL = 'https://todo-backend-express.herokuapp.com/';\n\nconst initialStale = {\n    title: '',\n    order: ''\n}\n\nconst mapStateToProps = state =>{\n    return {\n        tasks: state.tasks.tasks\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        changeVision(trueOrFalse){\n            dispatch(changeVision(trueOrFalse))\n        },\n        updateTasks(tasks){\n            dispatch(updateTasks(tasks))\n        },\n        updateLoading(trueOrFalse){\n            dispatch(updateLoading(trueOrFalse));\n        }\n    }\n}\n\nclass FormComponent extends Component {\n\n    constructor(props){\n        super(props);\n    }\n\n    state = {...initialStale};\n\n    sendTask = async (e) =>{\n        e.preventDefault();\n        if (this.state.title.length === 0){\n            alert('A tarefa deve ter um tÃ­tulo');\n            return;\n        }\n        if (this.state.title.length > 40){\n            alert('A tarefa nÃ£o deve ultrapassar 40 caracteres');\n            return;\n        }\n        this.props.updateLoading(true);\n        try{\n            axios.post(URL, {\n                title: this.state.title,\n                order: this.props.tasks.length + 1\n            });\n            const tasks = await axios.get(URL);\n            this.props.updateTasks(tasks.data)\n        } finally {\n            this.props.updateLoading(false);\n        }\n        this.props.changeVision(1);\n    }\n\n    render(){\n        return(\n            <>\n            <h3>Adicionar tarefa</h3>\n            <Form>\n            <Form.Group controlId=\"formBasicEmail\">\n                <Form.Control onChange={e => this.setState({title:e.target.value})} type=\"text\" required/>\n                <Form.Text className=\"text-muted\">\n                Campo obrigatÃ³rio\n                </Form.Text>\n            </Form.Group>\n        \n            <Button variant=\"primary\" type=\"submit\" onClick={e => this.sendTask(e)}>\n                Adicionar\n            </Button>\n            </Form>\n            </>\n        )\n    }\n} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormComponent);","/home/lucas/TI/TODO_Zygo/src/store/actions/tasks.js",[],"/home/lucas/TI/TODO_Zygo/src/store/actions/whichTableIsVisible.js",[],"/home/lucas/TI/TODO_Zygo/src/store/actions/loading.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":8,"column":1,"nodeType":"100","endLine":14,"endColumn":2},{"ruleId":"98","severity":1,"message":"99","line":4,"column":1,"nodeType":"100","endLine":14,"endColumn":2},{"ruleId":"98","severity":1,"message":"99","line":6,"column":1,"nodeType":"100","endLine":16,"endColumn":2},{"ruleId":"98","severity":1,"message":"99","line":5,"column":1,"nodeType":"100","endLine":14,"endColumn":2},{"ruleId":"98","severity":1,"message":"99","line":5,"column":1,"nodeType":"100","endLine":14,"endColumn":2},{"ruleId":"98","severity":1,"message":"99","line":5,"column":1,"nodeType":"100","endLine":14,"endColumn":2},{"ruleId":"98","severity":1,"message":"99","line":5,"column":1,"nodeType":"100","endLine":17,"endColumn":2},{"ruleId":"101","severity":1,"message":"102","line":41,"column":5,"nodeType":"103","messageId":"104","endLine":43,"endColumn":6},{"ruleId":"105","severity":1,"message":"106","line":62,"column":40,"nodeType":"107","messageId":"108","endLine":62,"endColumn":42},{"ruleId":"98","severity":1,"message":"99","line":4,"column":1,"nodeType":"100","endLine":16,"endColumn":2},{"ruleId":"98","severity":1,"message":"99","line":6,"column":1,"nodeType":"100","endLine":61,"endColumn":2},{"ruleId":"101","severity":1,"message":"102","line":40,"column":5,"nodeType":"103","messageId":"104","endLine":42,"endColumn":6},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]