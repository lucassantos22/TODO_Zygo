{"version":3,"sources":["components/templates/Navbar.js","components/templates/Footer.js","components/templates/Table.js","store/actions/whichTableIsVisible.js","store/actions/tasks.js","store/actions/loading.js","components/templates/Form.js","components/Home.js","components/Sobre.js","components/templates/404.js","routes.js","App.js","store/reducers/whichTableIsVisible.js","store/reducers/tasks.js","store/reducers/loading.js","store/storeConfig.js","index.js"],"names":["props","Navbar","bg","variant","Brand","to","style","color","title","subtitle","Nav","className","Link","id","fixed","href","marginBottom","Toggle","Collapse","Text","useState","setTitle","completed","Button","float","size","onClick","deleteCompletedTasks","Table","striped","hover","responsive","borderless","tasks","length","map","task","completeTask","url","InputGroup","width","marginTop","FormControl","placeholder","onChange","e","target","value","Append","editTask","textDecoration","disabled","deleteTask","Card","Body","Title","changeVision","table","type","payload","updateTasks","taskList","updateLoading","loading","URL","initialStale","order","FormComponent","state","sendTask","a","preventDefault","alert","axios","post","get","data","Form","Group","controlId","Label","Control","setState","required","Component","connect","dispatch","trueOrFalse","Home","this","prevState","sortTasksByOrder","JSON","stringify","sort","firstTask","secondTask","patch","completedTasks","filter","completedTask","delete","window","confirm","Spinner","animation","position","zIndex","left","top","Header","defaultActiveKey","Item","active","whichTableIsVisible","filterTasksNotCompleteds","filterTasksCompleteds","userList","path","exact","component","Sobre","Error404","App","Footer","initialState","INITIAL_STATE","reducers","combineReducers","action","ReactDOM","render","store","createStore","document","getElementById","navigator","serviceWorker","register"],"mappings":"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","file":"static/js/main.c630cf9b.chunk.js","sourcesContent":["import {Navbar, Nav} from 'react-bootstrap';\nimport { Link } from 'react-router-dom'\n\nimport { HouseDoorFill } from 'react-bootstrap-icons';\n\nexport default props => (\n    <>\n        <Navbar bg=\"primary\" variant=\"dark\">\n            <Navbar.Brand><Link to='/' style={{color:'white'}}><b>{props.title}</b> {props.subtitle}</Link></Navbar.Brand>\n            <Nav className=\"mr-auto\">\n            <Nav.Link><Link to='/' style={{color:'white'}} id='dashboard'><HouseDoorFill className='mb-1'/> Dashboard</Link></Nav.Link>\n            <Nav.Link><Link to='/sobre' style={{color:'white'}} id='sobre'>Sobre</Link></Nav.Link>\n            </Nav>\n        </Navbar>\n    </>\n)","import {Navbar} from 'react-bootstrap';\nimport {Github} from 'react-bootstrap-icons'\n\nexport default props => (\n    <Navbar bg=\"dark\" fixed=\"bottom\">\n        <Navbar.Brand href=\"https://github.com/lucassantos22\" style={{color: 'white'}}><Github style={{marginBottom: '3px'}}/> /lucassantos22</Navbar.Brand>\n        <Navbar.Toggle />\n        <Navbar.Collapse className=\"justify-content-end\">\n            <Navbar.Text style={{color: 'white'}}>\n                Client conectado ao <a style={{color: 'white'}} href=\"http://todobackend.com/specs/index.html?https://todo-backend-express.herokuapp.com/\">https://todo-backend-express.herokuapp.com/</a>\n            </Navbar.Text>\n        </Navbar.Collapse>\n    </Navbar>\n)","import React, {useState} from 'react';\n\nimport {Table, Button, Card, InputGroup, FormControl} from 'react-bootstrap';\nimport { Check, TrashFill, Exclamation } from 'react-bootstrap-icons';\n\nexport default props => {\n\n    const [title, setTitle] = useState('');\n\n    return (\n        <>\n            <h3>{props.title}</h3>\n            {props.completed ?\n                <Button variant=\"primary\" style={{float: 'right', marginBottom: '-100%'}} size=\"sm\" onClick={()=>props.deleteCompletedTasks()}>\n                    Limpar tarefas concluídas\n                </Button>\n            : null\n            }\n            <Table striped hover responsive borderless>\n                {props.tasks.length > 0 ? \n                    <>\n                        <thead>\n                            <tr>\n                                <th>Status</th>\n                                <th>Tarefa</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {props.tasks.map(task=>(\n                                <tr key={task.url}>\n                                    <td>{task.completed ? <Button onClick={()=>props.completeTask(task.url, false)} variant='success'><Check size='20'/></Button> : <Button onClick={()=>props.completeTask(task.url, true)} variant='warning'><Exclamation size='20'/></Button>}</td>\n                                    {task.completed === false? \n                                    <InputGroup style={{width: '100%', marginTop: '12px'}}>\n                                        <FormControl\n                                            placeholder={task.title}\n                                            onChange={e => setTitle(e.target.value)}\n                                        />\n                                        <InputGroup.Append>\n                                        <Button variant=\"primary\" onClick={()=>props.editTask(task.url, title)}>Editar</Button>\n                                        </InputGroup.Append>\n                                    </InputGroup>\n                                        : <td style={{textDecoration: 'line-through'}}><span style={{marginTop: '12px'}}>{task.title}</span></td>}\n                                    {!task.completed ? <td><Button variant=\"danger\" onClick={()=>props.deleteTask(task.url)}><TrashFill/></Button></td> : <td><Button variant=\"secondary\" disabled><TrashFill/></Button></td>}\n                                </tr>\n                            ))}\n                        </tbody>\n                    </>\n                : \n                    <Card>\n                    <Card.Body>\n                        <Card.Title id='Sobre'>Lista vazia</Card.Title>\n                        <Card.Text>\n                            Ops! Não existem tarefas {props.completed === true ? 'concluídas' : !props.completed ? 'em andamento' : ''} cadastradas :(\n                        </Card.Text>\n                    </Card.Body>\n                    </Card>\n                }\n            </Table>\n        </>\n    )\n}","// Action Creator\nexport function changeVision(table){\n    return {\n        type: 'VISION_CHANGED',\n        payload: table\n    }\n\n}","// Action Creator\nexport const updateTasks = (taskList)=>{\n    return {\n        type: 'UPDATE_TASK',\n        payload: taskList\n    }\n}","// Action Creator\nexport const updateLoading = (loading)=>{\n    return {\n        type: 'UPDATE_LOADING',\n        payload: loading\n    }\n}","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport axios from 'axios';\n\nimport {Form, Button} from 'react-bootstrap';\nimport {changeVision} from '../../store/actions/whichTableIsVisible';\nimport {updateTasks} from '../../store/actions/tasks';\nimport {updateLoading} from '../../store/actions/loading';\n\nconst URL = 'https://todo-backend-express.herokuapp.com/';\n\nconst initialStale = {\n    title: '',\n    order: ''\n}\n\nconst mapStateToProps = state =>{\n    return {\n        tasks: state.tasks.tasks\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        changeVision(trueOrFalse){\n            dispatch(changeVision(trueOrFalse))\n        },\n        updateTasks(tasks){\n            dispatch(updateTasks(tasks))\n        },\n        updateLoading(trueOrFalse){\n            dispatch(updateLoading(trueOrFalse));\n        }\n    }\n}\n\nclass FormComponent extends Component {\n\n    constructor(props){\n        super(props);\n    }\n\n    state = {...initialStale};\n\n    sendTask = async (e) =>{\n        e.preventDefault();\n        if (this.state.title.length === 0){\n            alert('A tarefa deve ter um título');\n            return;\n        }\n        if (this.state.title.length > 40){\n            alert('A tarefa não deve ultrapassar 40 caracteres');\n            return;\n        }\n        this.props.updateLoading(true);\n        try{\n            axios.post(URL, {\n                title: this.state.title,\n                order: this.props.tasks.length + 1\n            });\n            const tasks = await axios.get(URL);\n            this.props.updateTasks(tasks.data)\n        } finally {\n            this.props.updateLoading(false);\n        }\n        this.props.changeVision(1);\n    }\n\n    render(){\n        return(\n            <>\n            <h3>Cadastrar</h3>\n            <Form>\n            <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Tarefa</Form.Label>\n                <Form.Control onChange={e => this.setState({title:e.target.value})} type=\"text\" required/>\n                <Form.Text className=\"text-muted\">\n                Campo obrigatório\n                </Form.Text>\n            </Form.Group>\n        \n            <Button variant=\"primary\" type=\"submit\" onClick={e => this.sendTask(e)}>\n                Adicionar\n            </Button>\n            </Form>\n            </>\n        )\n    }\n} \n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormComponent);","import React, {Component} from 'react';\nimport Table from './templates/Table';\nimport Form from './templates/Form';\n\nimport {Card, Nav, Spinner} from 'react-bootstrap';\nimport {Check, CardText, ListTask, Exclamation} from 'react-bootstrap-icons';\n\nimport {connect} from 'react-redux';\nimport {changeVision} from '../store/actions/whichTableIsVisible';\nimport {updateTasks} from '../store/actions/tasks';\nimport {updateLoading} from '../store/actions/loading';\n\nimport axios from 'axios';\n\nconst URL = 'https://todo-backend-express.herokuapp.com/';\n\nconst mapStateToProps = state =>{\n    return {\n        whichTableIsVisible: state.whichTableIsVisible.whichTableIsVisible,\n        tasks: state.tasks.tasks,\n        loading: state.loading.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch =>{\n    return {\n        changeVision(trueOrFalse) {\n            dispatch(changeVision(trueOrFalse));\n        },\n        updateTasks(userList){\n            dispatch(updateTasks(userList));\n        },\n        updateLoading(trueOrFalse){\n            dispatch(updateLoading(trueOrFalse));\n        }\n    }\n}\n\nclass Home extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    async componentWillMount(){\n        this.props.updateLoading(true);\n        try {\n            await this.updateTasks();\n        } finally {\n            this.props.updateLoading(false);\n        }\n    }\n\n    async componentDidUpdate(prevState){\n        if (prevState.loading !== this.props.loading) return;\n        this.updateTasks(); \n    }\n\n    async updateTasks(){\n        const tasks = await axios.get(URL);\n        this.sortTasksByOrder(tasks.data);\n        if (JSON.stringify(tasks.data) == JSON.stringify(this.props.tasks)) {\n            return;  \n        } \n        this.props.updateTasks(tasks.data);\n    }\n\n    sortTasksByOrder(taskList){\n        taskList.sort((firstTask, secondTask)=>{\n            return firstTask.order < secondTask.order ? -1 : firstTask.order > secondTask.order ? 1 : 0; \n        });\n    }\n\n    async completeTask(url, completed){\n        await axios.patch(url,\n        {\n            completed\n        });\n        await this.updateTasks();\n    }\n\n    async deleteCompletedTasks(){\n        this.props.updateLoading(true);\n        const completedTasks = this.props.tasks.filter(task=>task.completed);\n        try {\n            for(const completedTask of completedTasks){\n                await axios.delete(completedTask.url)\n            }\n            if (completedTasks.length === 0){\n                alert('Não existem tarefas completas no momento');\n                return;\n            }\n            await this.updateTasks();\n        } finally {\n            this.props.updateLoading(false);\n        }\n    }\n\n    async editTask(url, title){\n        if (title.length === 0) {\n            alert('A tarefa deve ter um título');\n        }\n        this.props.updateLoading(true);\n        try {\n            await axios.patch(url,\n            {\n                title\n            });\n            await this.updateTasks();\n        } finally {\n            this.props.updateLoading(false);\n        }\n    }\n\n    async deleteTask(url){\n        const confirmation = window.confirm('Tem certeza que deseja excluir?');\n        if (confirmation){\n            this.props.updateLoading(true);\n            try {\n                await axios.delete(url);\n                await this.updateTasks();\n            } finally {\n                this.props.updateLoading(false);\n            }\n        }\n    }\n\n    filterTasksCompleteds(){\n        return this.props.tasks.filter(task=>task.completed);\n    }\n\n    filterTasksNotCompleteds(){\n        return this.props.tasks.filter(task=>!task.completed);\n    }\n\n    render(){\n        return(\n            <>\n            {\n                this.props.loading ? <Spinner animation=\"border\" variant=\"info\" style={{position: 'absolute', zIndex: '1', left: '50%', top: '40%'}}/>\n                : null    \n            }\n            <Card>\n                <Card.Header>\n                    <Nav variant=\"tabs\" defaultActiveKey=\"#first\">\n                    <Nav.Item>\n                        <Nav.Link active={this.props.whichTableIsVisible === 1 ? true : false} onClick={() => this.props.changeVision(1)}><ListTask/></Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                        <Nav.Link active={this.props.whichTableIsVisible === 2 ? true : false} onClick={() => this.props.changeVision(2)}><Exclamation/></Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                        <Nav.Link active={this.props.whichTableIsVisible === 3 ? true : false} onClick={() => this.props.changeVision(3)}><Check/></Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                        <Nav.Link active={this.props.whichTableIsVisible === 4 ? true : false} onClick={() => this.props.changeVision(4)}><CardText/></Nav.Link>\n                    </Nav.Item>\n                    </Nav>\n                </Card.Header>\n                <Card.Body>\n                    {this.props.whichTableIsVisible === 1 ? \n                    <Table\n                        title='Tarefas'\n                        deleteTask={url=>this.deleteTask(url)} \n                        completeTask={(url, completed)=>this.completeTask(url, completed)} \n                        editTask={(url, title)=>this.editTask(url, title)}\n                        tasks={this.props.tasks} \n                        completed='trueAndFalse'\n                        deleteCompletedTasks={()=>this.deleteCompletedTasks()}/> \n                    : this.props.whichTableIsVisible === 2 ? \n                    <Table\n                        title='A fazer'\n                        deleteTask={url=>this.deleteTask(url)} \n                        completeTask={(url, completed)=>this.completeTask(url, completed)}\n                        editTask={(url, title)=>this.editTask(url, title)}\n                        tasks={this.filterTasksNotCompleteds()}\n                        deleteCompletedTasks={()=>this.deleteCompletedTasks()}/> \n                        : this.props.whichTableIsVisible === 3 ? \n                    <Table \n                        title='Conluídas'\n                        deleteTask={url=>this.deleteTask(url)} \n                        completeTask={(url, completed)=>this.completeTask(url, completed)}\n                        editTask={(url, title)=>this.editTask(url, title)}\n                        tasks={this.filterTasksCompleteds()} \n                        completed={true}\n                        deleteCompletedTasks={()=>this.deleteCompletedTasks()}/> \n                    : <Form/>}\n                </Card.Body>\n            </Card>\n            </>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","import {Card} from 'react-bootstrap/';\n\nimport {Link} from 'react-router-dom';\n\nexport default props => (\n    <>\n        <Card>\n        <Card.Body>\n            <Card.Title id='Sobre'>Sobre</Card.Title>\n            <Card.Text>\n                Sistema desenvolvido para o processo seletive da empresa <a href='https://zygotecnologia.com/' target='blank'>Zygo</a> :)\n            </Card.Text>\n            <Card.Link><Link to='/'>Voltar</Link></Card.Link>\n        </Card.Body>\n        </Card>\n    </>\n)","import {Link} from 'react-router-dom'\nimport {Card} from 'react-bootstrap';\n\nexport default props => (\n    <>\n        <Card>\n        <Card.Body>\n            <Card.Title id='Sobre'>Erro 404</Card.Title>\n            <Card.Text>\n                Desculpe mas essa página não existe.\n            </Card.Text>\n            <Card.Link><Link to='/'>Voltar</Link></Card.Link>\n        </Card.Body>\n        </Card>\n    </>\n)","import React from \"react\";\nimport {Switch, Route} from 'react-router-dom';\n\nimport Home from './components/Home';\nimport Sobre from './components/Sobre';\nimport Error404 from './components/templates/404';\n\nexport default props => (\n    <Switch>\n        <Route path=\"/\" exact={true} component={Home} />\n        <Route path=\"/sobre\" component={Sobre} />\n        <Route path='*' component={Error404} />\n    </Switch>\n)","import Navbar from './components/templates/Navbar';\nimport Footer from './components/templates/Footer';\nimport Routes from './routes';\n\nimport {BrowserRouter} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Navbar title='TODO' subtitle='App'/>\n        <Routes/>\n        <Footer/>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;","const initialState = {\n    whichTableIsVisible: 1\n}\n\nexport default (state = initialState, action)=>{\n    switch (action.type) {\n        case 'VISION_CHANGED':\n            return {\n                ...state, whichTableIsVisible: action.payload\n            }\n        default:\n            return state;\n    }\n}","const INITIAL_STATE = {\n    tasks: []\n}\n\nexport default (state=INITIAL_STATE, action)=> {\n    switch (action.type) {\n        case 'UPDATE_TASK':\n            return {\n                ...state, tasks: action.payload\n            }\n        default:\n            return state;\n    }\n}","const INITIAL_STATE = {\n    loading: false\n}\n\nexport default (state=INITIAL_STATE, action)=> {\n    switch (action.type) {\n        case 'UPDATE_LOADING':\n            return {\n                ...state, loading: action.payload\n            }\n        default:\n            return state;\n    }\n}","import {createStore, combineReducers} from 'redux';\nimport whichTableIsVisible from './reducers/whichTableIsVisible';\nimport tasks from './reducers/tasks';\nimport loading from './reducers/loading';\n\nconst reducers = combineReducers({\n    whichTableIsVisible,\n    tasks,\n    loading\n});\n\nexport default function storeConfig(){\n    return createStore(reducers);\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport storeConfig from './store/storeConfig';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <>\n    <Provider store={storeConfig()}>\n      <App />\n    </Provider>\n  </>,\n  document.getElementById('root')\n);\n\nif('serviceWorker' in navigator) {\n  navigator.serviceWorker.register('sw.js');\n};"],"sourceRoot":""}